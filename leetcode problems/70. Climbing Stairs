class Solution {
public:
    int climbStairs(int n) {
        if (n == 1) return 1; // Only one way to climb 1 step.

        int prev2 = 1; // f(1)
        int prev1 = 2; // f(2)

        for (int i = 3; i <= n; i++) {
            int curr = prev1 + prev2; // f(n) = f(n-1) + f(n-2)
            prev2 = prev1;
            prev1 = curr;
        }

        return prev1;
    }
};


// #include <vector>
// using namespace std;

// class Solution {
// public:
//     int climbStairs(int n) {
//         if (n == 1) return 1; // Only one way to climb 1 step.

//         vector<int> dp(n + 1);
//         dp[1] = 1;
//         dp[2] = 2;

//         for (int i = 3; i <= n; i++) {
//             dp[i] = dp[i - 1] + dp[i - 2];
//         }

//         return dp[n];
//     }
// };
